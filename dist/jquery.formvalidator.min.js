/*! jQuery Form Validator - v0.9.2 - 2013-01-01
* https://github.com/jackfranklin/jQuery-Form-Validator
* Copyright (c) 2013 Jack Franklin; */
(function(e){e.fn.getAttributes=function(){var t={};return this.length?(e.each(this[0].attributes,function(e,n){t[n.name]=n.value}),t):this}})(jQuery),function(e){var t=function(){this.VERSION="0.9.0",this.formFields={},this.pendingValidations={}};t.prototype.init=function(e){return e&&this.addFields(e),this},t.prototype.addField=function(e){var t=$(e).getAttributes();this.formFields[t.name]={html:$(e),attributes:t}},t.prototype.addFields=function(e){for(var t=0;t<e.length;t++)this.addField(e[t])},t.prototype.field=function(e){return this.formFields[e]},t.prototype.fields=function(){return this.formFields},t.prototype.clearFields=function(){this.formFields={}},t.prototype.validateField=function(e,t){var n=this.formFields[e],r=n.html.attr("type"),i;if(n.html)if(r!=="text"){if(r==="checkbox"||r==="radio")i=n.html.is(":checked")}else i=n.html.val();if(!n)return!1;var s=[];for(var o in t){var u=this.getValidationMethod(o),a=t[o];if(!u)throw new Error("Validation method "+o+" does not exist");u.fn(i,a,n.html)||s.push(this.replacePlaceholdersInMessage(u.message,{name:e,params:a}))}return{valid:!s.length,field:n,messages:s}},t.prototype.replacePlaceholdersInMessage=function(e,t){e=e.replace(/%F/g,t.name);var n=t.params;if(Object.prototype.toString.call(n)==="[object Array]"){var r=n.length;for(var i=0;i<r;i++)e=e.replace(new RegExp("%ARGS\\["+i+"\\]","g"),t.params[i])}else e=e.replace(/%ARG/g,n);return e},t.prototype.getPendingValidations=function(){return this.pendingValidations},t.prototype.addValidation=function(e,t){if(this.pendingValidations[e])for(var n in t)this.pendingValidations[e][n]=t[n];else this.pendingValidations[e]=t},t.prototype.clearPendingValidations=function(){this.pendingValidations={}},t.prototype.runValidations=function(e){e=!!e;var t={};for(var n in this.pendingValidations){var r=this.validateField(n,this.pendingValidations[n]);t[n]={field:r.field,messages:r.messages,valid:r.valid,html:r.field.html}}e&&this.clearPendingValidations();var i=this.getAllErrors(t);return{valid:!i.length,fields:t,messages:this.getAllErrors(t)}},t.prototype.getAllErrors=function(e){var t=[];for(var n in e)t=t.concat(e[n].messages);return t},t.prototype.validationMethods={min_length:{message:"Field %F must be at least length %ARG",fn:function(e,t){return e.length>=t}},max_length:{message:"Field %F must be a maximum of %ARG characters",fn:function(e,t){return e.length<=t}},required:{message:"Field %F is required",fn:function(e){return e!==""&&!!e}},length_between:{message:"Field %F must be a minimum of %ARGS[0] characters and a maximum of %ARGS[1]",fn:function(e,t){var n=e.length;return n>=t[0]&&t[1]>=n}},matches:{message:"Field %F must match %ARG",fn:function(e,t){return e===t}}},t.prototype.addValidationMethod=function(e,t){this.validationMethods[e]=t},t.prototype.getValidationMethod=function(e){return this.validationMethods[e]},e.FormValidator=function(e){return(new t).init(e)},typeof define=="function"&&define([],function(){return e.FormValidator})}(this);